#ifndef GAME_CONTROL_H
#define GAME_CONTROL_H

/* This file was automatically generated.  Do not edit! */
extern struct CHARDEF CharDef[106];
extern short ItemNewRooms[256][2];
extern char globoncuttrig;
extern short los_rooms[20];
extern short ZSoff2;
extern short YSoff2;
extern short XSoff2;
extern short ZSoff1;
extern short YSoff1;
extern short XSoff1;
extern int ClosestDist;
extern int ClosestItem;
extern struct PHD_VECTOR ClosestCoord;
extern char RoomDrawType;
extern char WeatherType;
extern char LaraDrawType;
extern struct PENDULUM CurrentPendulum;
extern short SmashedMeshRoom[16];
extern struct MESH_INFO *SmashedMesh[16];
extern unsigned char HeavyTriggered;
extern struct ITEM_INFO *WB_item;
extern short WB_room;
extern int SetDebounce;
extern struct TWOGUN_INFO twogun[4];
extern struct SPIDER_STRUCT *Spiders;
extern struct BAT_STRUCT *Bats;
extern struct RAT_STRUCT *Rats;
extern unsigned char InGameCnt;
extern char cd_flags[136];
extern short *trigger_index;
extern int OnObject;
extern short FXType;
extern short IsRoomOutsideNo;
extern short *OutsideRoomOffsets;
extern char *OutsideRoomTable;
extern unsigned char IsAtmospherePlaying;
extern unsigned char CurrentAtmosphere;
extern unsigned long FmvSceneTriggered;
extern unsigned long _CutSceneTriggered2;
extern unsigned long _CutSceneTriggered1;
extern int tiltyoff;
extern int tiltxoff;
extern int height_type;
extern int flip_stats[10];
extern int flipmap[10];
extern int flip_status;
extern struct ITEM_INFO *items;
extern long rand_2;
extern int framecount;
extern long rand_1;
extern int number_los_rooms;
extern int NoInput;
extern char GetLaraOnLOS;
extern int nRope;
extern char richcutfrigflag;
extern short SmashedMeshCount;
extern short ItemNewRoomNo;
extern unsigned char InItemControlLoop;
extern short SlowMoFrameCount;
extern short SlowMotion;
extern int reset_flag;
extern char TriggerTimer;
extern unsigned short GlobalCounter;
extern unsigned char KeyTriggerActive;
extern unsigned char WeaponDelay;
extern unsigned char ShatterSounds[18][10];
extern int fliptimer;
extern int flipeffect;
int check_xray_machine_trigger();
int is_object_in_room(int roomnumber,int objnumber);
void NeatAndTidyTriggerCutscene(int value,int timer);
int CheckCutPlayed(int num);
void SetCutNotPlayed(int num);
void SetCutPlayed(int num);
void InitCutPlayed();
void ResetGuards();
void InterpolateAngle(short dest,short *src,short *diff,short speed);
int CheckGuardOnTrigger();
int ExplodeItemNode(struct ITEM_INFO *item,int Node,int NoXZVel,long bits);
int GetTargetOnLOS(struct GAME_VECTOR *src,struct GAME_VECTOR *dest,int DrawTarget,int firing);
void FireCrossBowFromLaserSight(struct GAME_VECTOR *src,struct GAME_VECTOR *target);
void TriggerNormalCDTrack(short value,short flags,short type);
void TriggerCDTrack(short value,short flags,short type);
void AddRoomFlipItems(struct room_info *r);
void RemoveRoomFlipItems(struct room_info *r);
void FlipMap(int FlipNumber);
void _TestTriggers(short *data,int heavy,int HeavyFlags);
void TestTriggers(short *data,int heavy,int HeavyFlags);
void RefreshCamera(short type,short *data);
long GetWaterHeight(long x,long y,long z,short room_number);
void AlterFloorHeight(struct ITEM_INFO *item,int height);
extern long nframes;
long ControlPhase(long nframes,int demo_mode);
void KillMoveEffects();
void KillMoveItems();

#endif
